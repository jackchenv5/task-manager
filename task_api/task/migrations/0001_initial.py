# Generated by Django 4.2.13 on 2024-05-24 03:56

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('user', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Granularity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, unique=True)),
            ],
            options={
                'db_table': 'granularity',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=512, null=True)),
                ('create_time', models.DateTimeField(auto_now=True)),
                ('start_time', models.DateTimeField(null=True)),
                ('done_time', models.DateTimeField(null=True)),
                ('description', models.CharField(max_length=512, null=True)),
                ('creater', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('granularity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='task.granularity')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='user.group')),
            ],
            options={
                'db_table': 'job',
            },
        ),
        migrations.CreateModel(
            name='JobStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, unique=True)),
            ],
            options={
                'db_table': 'job_status',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, unique=True)),
                ('color', models.CharField(blank=True, max_length=10)),
            ],
            options={
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='TaskCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, unique=True)),
            ],
            options={
                'db_table': 'task_category',
            },
        ),
        migrations.CreateModel(
            name='TaskStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, unique=True)),
            ],
            options={
                'db_table': 'task_status',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128)),
                ('content', models.CharField(max_length=2056, null=True)),
                ('challenge', models.CharField(max_length=2056, null=True)),
                ('feedback', models.CharField(max_length=2056, null=True)),
                ('project', models.CharField(max_length=512, null=True)),
                ('workload', models.IntegerField(default=0, null=True)),
                ('create_time', models.DateField(null=True)),
                ('start_time', models.DateField(null=True)),
                ('done_time', models.DateField(null=True)),
                ('deadline_time', models.DateField(null=True)),
                ('progress', models.CharField(max_length=32, null=True)),
                ('category', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='%(class)s', to='task.taskcategory')),
                ('creater', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_of_creater', to=settings.AUTH_USER_MODEL)),
                ('job', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='task.job')),
                ('receiver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_of_receiver', to=settings.AUTH_USER_MODEL)),
                ('related_task', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='task.task')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='task.taskstatus')),
                ('tags', models.ManyToManyField(null=True, related_name='%(class)s', to='task.tag')),
            ],
            options={
                'db_table': 'task',
            },
        ),
        migrations.AddField(
            model_name='job',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='task.jobstatus'),
        ),
    ]
